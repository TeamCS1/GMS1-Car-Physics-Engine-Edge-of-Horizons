<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tree</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 0;
rotation = 0;
highway = scr_load_model(working_directory + "oak_tree.d3d");
//setup collisions
image_xscale = 1
image_yscale = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    //make sure drawing colors are reset to white
    draw_set_color(c_white);
    //turn on texture repeating so our UV's work right
    texture_set_repeat(true);
    draw_set_alpha(1);
    d3d_transform_set_scaling(1, 1, 1);
    d3d_transform_add_rotation_z(rotation);
    d3d_transform_add_translation(x, y, z);
    d3d_set_lighting(true);
    
   // Get the distance between the tree and the car
    distance_to_car = point_distance(x, y, o_car.x, o_car.y);

    // Use a case statement to switch between different resolutions based on the distance
    if (distance_to_car &lt;= 500)
    {
        d3d_model_draw(highway, 0, 0, z, sprite_get_texture(uv_oak_tree_1024,0));
    }
    
    else if (distance_to_car &gt; 501 &amp;&amp; distance_to_car &lt;= 1000)
    {
        d3d_model_draw(highway, 0, 0, z, sprite_get_texture(uv_oak_tree_512,0));
    }
        
    else if (distance_to_car &gt; 1001 &amp;&amp; distance_to_car &lt;= 1500)
    {
        d3d_model_draw(highway, 0, 0, z, sprite_get_texture(uv_oak_tree_256,0));
    }
        
    else if (distance_to_car &gt; 1501 &amp;&amp; distance_to_car &lt;= 2000)
    {
        d3d_model_draw(highway, 0, 0, z, sprite_get_texture(uv_oak_tree_128,0));
    }
        
    else if (distance_to_car &gt; 2001 &amp;&amp; distance_to_car &lt;= 5000)
    {
        d3d_model_draw(highway, 0, 0, z, sprite_get_texture(uv_oak_tree_64,0));
    }
             
    d3d_set_lighting(false);
    d3d_transform_set_identity();

    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,64</point>
  </PhysicsShapePoints>
</object>
